{"ast":null,"code":"var _jsxFileName = \"/home/satishp/Desktop/work/react-crud/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport List from \"./components/List\";\nimport Addperson from \"./components/Addperson\";\nimport View from \"./components/View\";\nimport Edit from \"./components/Edit\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = 'http://192.168.1.5:3000/api/person';\n\nfunction App() {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  useEffect(() => {\n    axios.get(apiUrl).then(res => {\n      const persons = res.data;\n      console.log(persons);\n      setPersons(persons);\n    });\n  }, []);\n\n  const deletePerson = id => {\n    axios.delete(`${apiUrl}/${id}`).then(res => {\n      const personsClone = [...persons];\n      const newPersonList = personsClone.filter(person => {\n        return person._id !== id;\n      });\n      setPersons(newPersonList);\n    }).catch(err => alert('Unable to Delete'));\n  };\n\n  const addPerson = e => {\n    e.preventDefault();\n    const firstName = e.target.elements.firstName.value,\n          lastName = e.target.elements.lastName.value,\n          age = e.target.elements.age.value,\n          email = e.target.elements.email.value;\n    console.log(firstName, lastName, age, email);\n    axios.post(apiUrl, {\n      firstName,\n      lastName,\n      age,\n      email\n    }).then(res => {\n      const personsClone = [...persons];\n      setPersons([...personsClone, res.data]);\n    }).catch(err => alert('Unable to Add Person. Make sure you are using unique email'));\n  };\n\n  const updatePerson = (e, id) => {\n    e.preventDefault();\n    const firstName = e.target.elements.firstName.value,\n          lastName = e.target.elements.lastName.value,\n          age = e.target.elements.age.value,\n          email = e.target.elements.email.value;\n    console.log(firstName, lastName, age, email);\n    axios.put(`${apiUrl}/${id}`, {\n      firstName,\n      lastName,\n      age,\n      email\n    }).then(res => {\n      console.log(res);\n      const personsClone = [...persons];\n      const updatedPerson = personsClone.map(person => {\n        if (person._id === id) {// person.firstName = firstName,\n          // person.lastName = lastName,\n          // person.age = age,\n          // person.email = email\n        }\n\n        return { ...person\n        };\n      });\n      console.log(updatedPerson);\n      alert('Edited');\n    }).catch(err => alert('Unable to Edit'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: () => /*#__PURE__*/_jsxDEV(List, {\n            users: persons,\n            deleteUser: deletePerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/add\",\n          render: () => /*#__PURE__*/_jsxDEV(Addperson, {\n            addUser: addPerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/view\",\n          render: () => /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          render: () => /*#__PURE__*/_jsxDEV(Edit, {\n            updateUser: updatePerson\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"3dL94kAggHNyJLHmh8hlLChOUrQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/satishp/Desktop/work/react-crud/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","axios","List","Addperson","View","Edit","apiUrl","App","persons","setPersons","get","then","res","data","console","log","deletePerson","id","delete","personsClone","newPersonList","filter","person","_id","catch","err","alert","addPerson","e","preventDefault","firstName","target","elements","value","lastName","age","email","post","updatePerson","put","updatedPerson","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport List from \"./components/List\";\nimport Addperson from \"./components/Addperson\";\nimport View from \"./components/View\";\nimport Edit from \"./components/Edit\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst apiUrl = 'http://192.168.1.5:3000/api/person'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    axios.get(apiUrl)\n      .then(res => {\n        const persons = res.data;\n        console.log(persons)\n        setPersons(persons);\n      })\n  },[])\n\n  const deletePerson = (id) => {\n    axios.delete(`${apiUrl}/${id}`)\n      .then(res => {\n        const personsClone = [...persons]\n        const newPersonList = personsClone.filter(person => {\n          return person._id !== id\n        })\n        setPersons(newPersonList);\n      }).catch(err => alert('Unable to Delete'))\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const firstName = e.target.elements.firstName.value,\n          lastName = e.target.elements.lastName.value,\n          age = e.target.elements.age.value,\n          email = e.target.elements.email.value\n\n    console.log(firstName, lastName, age, email)\n    axios.post(apiUrl, {\n      firstName,\n      lastName,\n      age,\n      email\n    }).then(res => {\n      const personsClone = [...persons]\n      setPersons([...personsClone, res.data])\n    })\n      .catch(err => alert('Unable to Add Person. Make sure you are using unique email'))\n  }\n\n  const updatePerson = (e, id) => {\n    e.preventDefault()\n    const firstName = e.target.elements.firstName.value,\n          lastName = e.target.elements.lastName.value,\n          age = e.target.elements.age.value,\n          email = e.target.elements.email.value\n\n    console.log(firstName, lastName, age, email)\n    axios.put(`${apiUrl}/${id}`, {\n        firstName,\n        lastName,\n        age,\n        email\n    }).then(res => {\n        console.log(res)\n        const personsClone = [...persons]\n        const updatedPerson = personsClone.map(person => {\n          if(person._id === id) {\n              // person.firstName = firstName,\n              // person.lastName = lastName,\n              // person.age = age,\n              // person.email = email\n          }\n          return {...person}\n        })\n        console.log(updatedPerson)\n        alert('Edited')\n    })\n    .catch(err => alert('Unable to Edit'))\n}\n\n  return (\n    <>\n      <Router>\n        <div className=\"container\">\n        <Route exact path='/' render={() => (\n          <List users={persons} deleteUser={deletePerson} />  \n        )} />\n        <Route path='/add' render={() => (\n          <Addperson addUser={addPerson}/>\n        )} />\n        <Route path='/view' render={() => (\n          <View />\n        )} />\n        <Route path='/edit' render={() => (\n          <Edit updateUser={updatePerson} />\n        )} />\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}